Source = { { Trivia } Statement } { Trivia };

Trivia = Space | Terminator | Comment;

Statement = Instruction | Label;

Instruction = Opcode [Space Expression { [Space] Delimiter [Space] Expression }] [Space] [Comment] Terminator;

Label = Identifier ":";

Opcode = ? i8085.OpcodeName ?;

Expression = Register | Identifier | Integer;

Register = ? i8085.RegisterName ?;

Identifier = "[a-zA-Z_.][a-zA-Z0-9_.]*";

Integer =
	| "[0-9][0-9_]*"
	| "0[bB][01_]+"
	| "0[oO][0-7_]+"
	| "0[dD][0-9_]+"
	| "0[xX][0-9A-Fa-f_]+"
	| "[0-1][0-1_]*[bB]"
	| "[0-7][0-7_]*[oO]"
	| "[0-9][0-9_]*[dD]"
	| "[0-9][0-9A-Fa-f_]*[hH]"
	;

Space = "[ \t]+";

Terminator = "[\r\n]+";

Comment = ";[^\r\n]+";

Delimiter = ",";

(** TODO
	- preprocessor (assembler directives, etc.)
	- expressions (operators, etc.)
**)
